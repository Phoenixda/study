* 为小技巧

1.向上造型
  造型：一个类型的对象可以赋值给另一个类型的变量
  实际上是管理员的赋值
  Java中对象不能对象与对象之间的赋值（C++可以）
  子类变量可以交给父类，父类变量不能交给子类变量（变量是对象）
2.对于造型的强制转换
  不一定成功
  因为处理的是对象
  对象里面含有多种变量（先谈变量）
  如果被强制的对象缺少被赋值变量的管理者管理的空间里的一种变量，那么赋值虽然
  成功，但是运行时会提示错误
3.类型转换与造型
  变量（例如int，举例不恰当，对象也可以是变量）：类型转换
       被赋值的是转变后的赋值
  对象：造型
       被赋值的是当成是转变后的赋值（实际并无转变）
4.向上造型
  子类对象当成父类对象
5.动态绑定
  Java的 .函数 都是动态绑定
6.覆盖
  子类与父类的函数名相同
  子类函数会覆盖父类函数
7.多态
  子类有这个函数
  父类也有这个函数
  用的是父类，但是父类.函数  ，用的是哪个函数不一定
  （与前面总结的类似，就是换一种说法，个人喜好前面的总结）
8.单根结构
  所有Java的类都是object类的子类
  所以op语言都是单根结构（除了C++） 
  object里的函数：
                 1.toString()
                 2.equals()
*9.自动产生toString()
   source->Generate toString()
*10.改写父类有的函数
    自动生成equals()（object的equals()只是比较了管理者）
    source->Override/Implement.Methods...
11.@Override
   表示下面的函数覆盖了父类函数
   给编译器看的
*12.继承
    在建立类的时候，在superclass里选择
    会在打开后直接给你extends