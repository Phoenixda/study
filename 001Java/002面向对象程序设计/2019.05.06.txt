* 为小技巧

1.框架加数据
  舍弃硬编码，实现软编码
  把引出函数的字符串放到HashMap里中是一种软编码
  软编码实现可扩展性
2.程序设计
  1.减少重复代码
  2.降低耦合
  3.可扩展性
  4.数据与表现分离
3.抽象
  举例：形状，它的子类：矩形，正方形，圆形
  都含有的方法是draw()，但是形状的draw()无意义，因为你无法画一个形状
  形状只是一个概念，使他的子类有关系――都是形状。
  因为父类无实际意义，所以将它做成一个抽象类。
  所以它的方法也是抽象的，抽象的方法不带{}

  抽象的另一个意义：这个类不能产生对象的
 
  结论：抽象函数――表达概念而无法实现具体代码的函数
        抽象类――表达概念而无法构造出实体的类
4.实现抽象函数
  继承抽象类的子类 ，必须覆盖父类中所以的抽象类
  否则自己成为抽象类
5.两种抽象
  1.与具体相对
    非实体
    shape（被做成了抽象类）
  2.与细节相对
    一定程度上忽略了细节
    vehicle（被做成了父类）
  继承是否是一种特殊的抽象。
6.思考
  我们的Java的四大特性（封装，继承，多态，抽象）
  继承（抽象的一种：细节抽象）->抽象（为了多态的实现）->多态（减少代码重用）
  封装：安全性
7.数据与表现分离
8.接口（interface）是纯抽象类（absorb）
  变量是public static final     是常量



